name: Argus C1

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Install system dependencies for Playwright
      run: |
        sudo apt-get update
        sudo apt-get install -y libgbm-dev libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6
    
    - name: Install Playwright browsers
      run: |
        npx playwright install --with-deps chromium
        npx playwright install-deps
    
    - name: Setup browser testing environment
      run: |
        echo "CI=true" >> $GITHUB_ENV
        echo "PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=0" >> $GITHUB_ENV
        echo "NODE_ENV=test" >> $GITHUB_ENV
    
    - name: Lint code
      run: npm run lint
      
    - name: Run tests
      run: npm test
      env:
        CI: true
        NODE_ENV: test
      
  build-and-release:
    needs: lint-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check version changes
      id: check_version
      uses: EndBug/version-check@v2
      with:
        file-name: package.json
        
    - name: Create Release
      if: steps.check_version.outputs.changed == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.check_version.outputs.version }}
        release_name: Release v${{ steps.check_version.outputs.version }}
        draft: false
        prerelease: false 